# Partioned periodicity 
# function. 
# Runs function interleaved 
# with normal shell operations 

typeset -i PERIOD_COUNTER

PERIOD_COUNTER=0
# Create one in n based on PERIOD_MAX 
# e.g.
# 5 -> [1,3,5,7,9]
function do_one_in_n {
    local -i n 
    local -i p 
    local -a ret 
    n=$1
    p=$2
    case $n in 
            0)
            ret=() 
            ;;
            1)
            ret=(4)
            ;;
            2)
            ret=(0 9)
            ;;
            3)
            ret=(0 3 9)
            ;;
            4)
            ret=(0 2 6 8)
            ;;
            5)
            ret=(0 2 4 6 9)
            ;;
            6)
            ret=(0 2 3 4 6 8)
            ;;
            7)
            ret=(0 1 3 4 5 6 9)
            ;;
            8)
            ret=(0 1 2 4 5 6 7 9)
            ;;
            9)
            ret=(1 3 2 4 5 6 7 8 9)
            ;;
            *)
            ret=(0 1 2 3 4 5 6 7 8 9)
            ;;
    esac 

    for r in $ret; do 
        if [[ $r == $p ]]; then 
            return 0
        fi 
    done 
    return -1
}

function fn_exist {
    type $1 | grep -q 'shell function'
}
function periodicity {
    fn_exist 1_in_10 && do_one_in_n 1 $PERIOD_COUNTER && 1_in_10 
    fn_exist 2_in_10 && do_one_in_n 2 $PERIOD_COUNTER && 2_in_10 
    fn_exist 3_in_10 && do_one_in_n 3 $PERIOD_COUNTER && 3_in_10 
    fn_exist 4_in_10 && do_one_in_n 4 $PERIOD_COUNTER && 4_in_10 
    fn_exist 5_in_10 && do_one_in_n 5 $PERIOD_COUNTER && 5_in_10 
    fn_exist 6_in_10 && do_one_in_n 6 $PERIOD_COUNTER && 6_in_10 
    fn_exist 7_in_10 && do_one_in_n 7 $PERIOD_COUNTER && 7_in_10 
    fn_exist 8_in_10 && do_one_in_n 8 $PERIOD_COUNTER && 8_in_10 
    fn_exist 9_in_10 && do_one_in_n 9 $PERIOD_COUNTER && 9_in_10 
    fn_exist 10_in_10 && do_one_in_n 10 $PERIOD_COUNTER && 10_in_10 
    (( PERIOD_COUNTER = (PERIOD_COUNTER + 1) % 10 ))

}
